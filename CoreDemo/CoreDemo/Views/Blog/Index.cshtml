@using EntityLayer.Concrete
@using System.Text.RegularExpressions;
@model MyViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<style>
	.card-img-topp {
		height: 250px; /* Tüm görsellerin aynı yükseklikte görüntülenmesi için */
	}

	.card-body {
		height: 100%; /* Tüm kartların aynı yükseklikte olması için */
	}

.btn {
  background-color: #00488E;
  color: white;
  border: none;
  padding: 12px 16px;
  font-size: 16px;
  
  margin-right: 5px;
  border-radius: 0px;
  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}
.btn:focus{
	box-shadow:none;
}
.btn:hover {
			background-color: #00488E;
}

.btn:not(.active) {
  transform: translateX(-10px);

			border: none;
}

.btn.active {
	border:none;
			background-color: #f58320;
  transform: translateX(0);
  opacity: 1;
}




/* Container styles */
.container {
	border: none;
  margin-top: 20px;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

	.card-text {
		height: 135px;
		overflow: hidden;
		text-overflow: ellipsis;
</style>


	


<div style="background-color:#00488E" id="myBtnContainer">
	<button class="btn active" onclick="filterSelection('all')"> Tüm Kategoriler</button>

	@foreach (var item in Model.Categories)
	{
		<button class="btn btn-border" onclick="filterSelection('@item.CategoryName')"> @item.CategoryName </button>
	}
</div>





<h3 style="position:relative;top:5%" class="tittle">Bloglarımız</h3>
<section class="main-content-w3layouts-agileits">
		<div  class="container">

		<div style=" position:relative;top:-10%">
				<!--left-->
				<div class="left-blog-info-w3layouts-agileits text-left">
					<div class="row">
					@foreach (var item in Model.Blogs.OrderByDescending(x => x.BlogID))
					{
						
						<div class="col-lg-4 card filterDiv @item.Category.CategoryName">
							<a href="/Blog/BlogReadAll/@item.BlogID">
								<img src="@item.BlogImage" class="card-img-topp img-fluid" alt="">
							</a>

							<div class="card-body">
								<ul class="blog-icons my-4">
									<li>
										<a href="#">
											<i class="far fa-calendar-alt"></i>@(((DateTime)item.BlogCreateDate).ToString("dd-MMM-yyy"))
										</a>
									</li>
									<li class="mx-2">
									@*	<a href="#">
											<i class="far fa-comment"></i> 
										</a>*@
									</li>
									<li>
										<a href="#">
											<i class="fas fa-eye"></i> @item.Category.CategoryName
										</a>
									</li>

								</ul>
								<h5 class="card-title">
									<a href="/Blog/BlogReadAll/@item.BlogID">@item.BlogTitle</a>
								</h5>
								@{
									// HTML etiketlerini kaldırmak için Regex kullanımı
									string contentWithoutHtml = Regex.Replace(item.BlogContent, @"<[^>]+>|&nbsp;", "").Trim();
									// İlk 300 karakterin alınması
									string blogSummary = contentWithoutHtml.Length > 300 ? contentWithoutHtml.Substring(0, 150) : contentWithoutHtml;
									// Son kelimenin tamamının alınması
									blogSummary = blogSummary.Substring(0, blogSummary.LastIndexOf(" "));
								}
								
									<p class="card-text mb-8">@blogSummary...</p>
				
								<a href="/Blog/BlogReadAll/@item.BlogID" class="btn btn-primary read-m">Devamını Oku</a>
								
							</div>
							<br>
						</div>

						}

					<!--//left-->
				</div>
			</div>
		</div>
		</div>
	</section>
	<script>
filterSelection("all")
function filterSelection(c) {
  var x, i;
  x = document.getElementsByClassName("filterDiv");
  if (c == "all") c = "";
  for (i = 0; i < x.length; i++) {
    w3RemoveClass(x[i], "show");
    if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], "show");
  }
}

function w3AddClass(element, name) {
  var i, arr1, arr2;
  arr1 = element.className.split(" ");
  arr2 = name.split(" ");
  for (i = 0; i < arr2.length; i++) {
    if (arr1.indexOf(arr2[i]) == -1) {element.className += " " + arr2[i];}
  }
}

function w3RemoveClass(element, name) {
  var i, arr1, arr2;
  arr1 = element.className.split(" ");
  arr2 = name.split(" ");
  for (i = 0; i < arr2.length; i++) {
    while (arr1.indexOf(arr2[i]) > -1) {
      arr1.splice(arr1.indexOf(arr2[i]), 1);     
    }
  }
  element.className = arr1.join(" ");
}

// Add active class to the current button (highlight it)
var btnContainer = document.getElementById("myBtnContainer");
var btns = btnContainer.getElementsByClassName("btn");
for (var i = 0; i < btns.length; i++) {
  btns[i].addEventListener("click", function(){
    var current = document.getElementsByClassName("active");
    current[0].className = current[0].className.replace(" active", "");
    this.className += " active";
  });
}


	function filterSelection(c) {
		var x, i;
		x = $(".filterDiv");
		if (c == "all") {
			x.show(750);
		} else {
			x.hide(500);
			x.filter("." + c).show(750);
		}

		var btnContainer = $("#myBtnContainer");
		var btns = btnContainer.find(".btn");
		btns.removeClass("active");
		btns.filter("[onclick*='" + c + "']").addClass("active");
	}


</script>